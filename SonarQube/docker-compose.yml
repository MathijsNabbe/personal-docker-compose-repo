services:
  sonarqube:
    image: sonarqube:10.6-community
    depends_on:
      - db
    restart: unless-stopped
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: ${SONAR_USERNAME}
      SONAR_JDBC_PASSWORD: ${SONAR_PASSWORD}
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_conf:/opt/sonarqube/conf
    ports:
      - "9000:9000"
    networks:
      - traefik
      - sonarqube

    labels:
      traefik.enable: "true"
      traefik.docker.network: "traefik"

      traefik.http.routers.sonarqube.entrypoints: "web"
      traefik.http.routers.sonarqube.rule: "Host(`analysis.mathijsnabbe.nl`)"
      traefik.http.routers.sonarqube.service: "sonarqube-svc"
      traefik.http.services.sonarqube-svc.loadbalancer.server.port: 9000

  db:
    image: postgres:12
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${SONAR_USERNAME}
      POSTGRES_PASSWORD: ${SONAR_PASSWORD}
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - sonarqube

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  sonarqube_conf:
  postgresql:
  postgresql_data:

networks:
  sonarqube:
  traefik:
    external: true